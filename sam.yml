AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Instance Watcher Stack
###########################################################
Parameters:
###########################################################
  ENV:
    Type: String
    Default: dev
    Description: Environment Name
  AWSREGION:
    Type: String
    Default: eu-west-1
    Description: AWS Region
  RECIPIENTS:
    Type: String
    Default: john@doe.com
    Description: List of recipients
  SENDER:
    Type: String
    Default: no-reply@doe.com
    Description: Sender
  PROJECT:
    Type: String
    Default: instance-watcher
    Description: Project Name
###########################################################
Resources:
###########################################################
  InstanceWatcherFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub ${PROJECT}-${ENV}
      Description: Monitoring Running Instances + Email Alerting
      Handler: handlers.main
      Runtime: python3.7
      CodeUri: ./build
      MemorySize: 256
      Timeout: 300
      Layers:
        - !Ref boto3layer
      Environment:
        Variables:
          RECIPIENTS: !Ref RECIPIENTS
          SENDER: !Ref SENDER
          AWSREGION: !Ref AWSREGION
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - ec2:DescribeRegions
              - ec2:DescribeInstances
              - redshift:DescribeClusters
              - ec2:DescribeInstanceStatus
              - rds:DescribeDBInstances
              - sagemaker:ListNotebookInstances
              - glue:GetDevEndpoints
              - ses:SendEmail
              - iam:GetRole
              - iam:ListAccountAliases
              Resource: '*'
      Events:
        Timer:
          Type: Schedule
          Properties:
            Name: instance-watcher-schedule
            Schedule: cron(0 0 * * ? *)
      Tags:
        Project: !Ref PROJECT

  boto3layer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      LayerName: boto3-layer
      Description: boto3 layer
      ContentUri: ./layer
      CompatibleRuntimes:
        - python3.6
        - python3.7
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Retain

